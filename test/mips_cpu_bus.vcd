$date
	Sun Dec  6 20:36:29 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module mips_cpu_bus_tb $end
$var wire 32 ! writedata [31:0] $end
$var wire 1 " write $end
$var wire 1 # waitrequest $end
$var wire 32 $ register_v0 [31:0] $end
$var wire 32 % readdata [31:0] $end
$var wire 1 & read $end
$var wire 4 ' byteenable [3:0] $end
$var wire 32 ( address [31:0] $end
$var wire 1 ) active $end
$var reg 1 * clk $end
$var reg 1 + clk_enable $end
$var reg 1 , rst $end
$var integer 32 - counter [31:0] $end
$scope module CPU $end
$var wire 1 * clk $end
$var wire 1 , reset $end
$var wire 32 . writedata [31:0] $end
$var wire 1 " write $end
$var wire 1 # waitrequest $end
$var wire 1 / stall $end
$var wire 32 0 register_v0 [31:0] $end
$var wire 32 1 readdata [31:0] $end
$var wire 1 & read $end
$var wire 32 2 instr_readdata [31:0] $end
$var wire 1 3 instr_read $end
$var wire 32 4 instr_address [31:0] $end
$var wire 32 5 data_writedata [31:0] $end
$var wire 1 6 data_write $end
$var wire 32 7 data_readdata [31:0] $end
$var wire 1 8 data_read $end
$var wire 4 9 data_byteenable [3:0] $end
$var wire 32 : data_address [31:0] $end
$var wire 1 ; clk_enable $end
$var wire 4 < byteenable [3:0] $end
$var wire 32 = address [31:0] $end
$var wire 1 ) active $end
$scope module cpuInst $end
$var wire 1 * clk $end
$var wire 1 ; clk_enable $end
$var wire 1 , reset $end
$var wire 1 > signextend_sel $end
$var wire 5 ? shamt [4:0] $end
$var wire 5 @ rt [4:0] $end
$var wire 5 A rs [4:0] $end
$var wire 32 B register_v0 [31:0] $end
$var wire 1 C reg_write_enable $end
$var wire 32 D reg_write_data [31:0] $end
$var wire 5 E reg_write_addr [4:0] $end
$var wire 2 F reg_data_sel [1:0] $end
$var wire 32 G reg_data_b [31:0] $end
$var wire 32 H reg_data_a [31:0] $end
$var wire 2 I reg_addr_sel [1:0] $end
$var wire 5 J rd [4:0] $end
$var wire 2 K pc_sel [1:0] $end
$var wire 32 L next_pc [31:0] $end
$var wire 2 M lwlr_sel [1:0] $end
$var wire 32 N lwlr_data [31:0] $end
$var wire 26 O j_addr [25:0] $end
$var wire 1 P is_branch $end
$var wire 32 Q instr_readdata [31:0] $end
$var wire 16 R imm [15:0] $end
$var wire 32 S extended_imm [31:0] $end
$var wire 32 T extended_data [31:0] $end
$var wire 1 6 data_write $end
$var wire 32 U data_readdata [31:0] $end
$var wire 1 8 data_read $end
$var wire 32 V curr_pc [31:0] $end
$var wire 32 W curr_instr [31:0] $end
$var wire 2 X byte_offset [1:0] $end
$var wire 4 Y byte_enable [3:0] $end
$var wire 1 Z branch_is_true $end
$var wire 3 [ branch_cond [2:0] $end
$var wire 32 \ aluout [31:0] $end
$var wire 1 ] alu_sel $end
$var wire 32 ^ alu_input [31:0] $end
$var wire 5 _ alu_control [4:0] $end
$var wire 1 ` LO_write_enable $end
$var wire 32 a LO_reg2alu [31:0] $end
$var wire 32 b LO_alu2reg [31:0] $end
$var wire 1 c HI_write_enable $end
$var wire 32 d HI_reg2alu [31:0] $end
$var wire 32 e HI_alu2reg [31:0] $end
$var reg 1 f act $end
$var reg 1 ) active $end
$var reg 1 g clken $end
$var reg 32 h data_address [31:0] $end
$var reg 32 i data_writedata [31:0] $end
$var reg 32 j instr_address [31:0] $end
$var reg 1 3 instr_read $end
$scope module ALU_1 $end
$var wire 64 k unsigned_product [63:0] $end
$var wire 64 l signed_product [63:0] $end
$var wire 32 m shift_right_logical [31:0] $end
$var wire 32 n shift_right_arithmetic [31:0] $end
$var wire 32 o shift_left_logical [31:0] $end
$var wire 5 p sa [4:0] $end
$var wire 32 q remainder [31:0] $end
$var wire 32 r quotient [31:0] $end
$var wire 32 s product_lo [31:0] $end
$var wire 32 t product_hi [31:0] $end
$var wire 32 u lwlr_addr [31:0] $end
$var wire 32 v less_than_unsigned [31:0] $end
$var wire 32 w less_than_signed [31:0] $end
$var wire 32 x immediate_zero_extend [31:0] $end
$var wire 2 y byte_offset [1:0] $end
$var wire 3 z branch_cond [2:0] $end
$var wire 32 { bitwise_xor [31:0] $end
$var wire 32 | bitwise_or [31:0] $end
$var wire 32 } bitwise_and [31:0] $end
$var wire 5 ~ alu_control [4:0] $end
$var wire 32 !" adder_result [31:0] $end
$var wire 32 "" adder_B [31:0] $end
$var wire 32 #" LO_input [31:0] $end
$var wire 32 $" HI_input [31:0] $end
$var wire 32 %" B [31:0] $end
$var wire 32 &" A [31:0] $end
$var reg 32 '" HI_output [31:0] $end
$var reg 32 (" LO_output [31:0] $end
$var reg 32 )" alu_result [31:0] $end
$var reg 1 Z branch_cond_true $end
$upscope $end
$scope module ALU_decoder_1 $end
$var wire 5 *" sa [4:0] $end
$var wire 32 +" instr_readdata [31:0] $end
$var wire 6 ," instr_opcode [5:0] $end
$var wire 6 -" func_code [5:0] $end
$var wire 5 ." branch_field [4:0] $end
$var reg 1 c HI_write_enable $end
$var reg 1 ` LO_write_enable $end
$var reg 5 /" alu_control [4:0] $end
$var reg 3 0" branch_cond [2:0] $end
$upscope $end
$scope module decoder_1 $end
$var wire 1 ) active $end
$var wire 1 g clk_enable $end
$var wire 1 Z is_true $end
$var wire 1 , reset $end
$var wire 5 1" rt [4:0] $end
$var wire 5 2" rs [4:0] $end
$var wire 5 3" rd [4:0] $end
$var wire 26 4" j_addr [25:0] $end
$var wire 32 5" instr_readdata [31:0] $end
$var wire 6 6" instr_opcode [5:0] $end
$var wire 16 7" immediate [15:0] $end
$var wire 6 8" funct_code [5:0] $end
$var reg 1 ] alu_sel $end
$var reg 4 9" byte_enable [3:0] $end
$var reg 1 8 data_read $end
$var reg 1 6 data_write $end
$var reg 1 P is_branch $end
$var reg 2 :" lwlr_sel [1:0] $end
$var reg 2 ;" pc_sel [1:0] $end
$var reg 2 <" reg_addr_sel [1:0] $end
$var reg 2 =" reg_data_sel [1:0] $end
$var reg 1 C reg_write_enable $end
$var reg 1 > signextend_sel $end
$upscope $end
$scope module instr_reg_1 $end
$var wire 1 * clk $end
$var wire 1 g clk_enable $end
$var wire 1 , reset $end
$var wire 32 >" instr_readdata [31:0] $end
$var reg 32 ?" curr_instr [31:0] $end
$upscope $end
$scope module lwlr_1 $end
$var wire 2 @" byte_offset [1:0] $end
$var wire 1 A" lwl $end
$var wire 32 B" reg_data_b [31:0] $end
$var wire 32 C" data_readdata [31:0] $end
$var reg 32 D" reg_write_data [31:0] $end
$upscope $end
$scope module mux1_1 $end
$var wire 5 E" rd [4:0] $end
$var wire 5 F" rt [4:0] $end
$var wire 2 G" select [1:0] $end
$var reg 5 H" reg_write_addr [4:0] $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 ] select $end
$var wire 32 I" reg_data_b [31:0] $end
$var wire 32 J" extended_imm [31:0] $end
$var reg 32 K" alu_input [31:0] $end
$upscope $end
$scope module mux3_1 $end
$var wire 32 L" aluout [31:0] $end
$var wire 1 M" islwlr $end
$var wire 32 N" lwlr_data [31:0] $end
$var wire 2 O" select [1:0] $end
$var wire 32 P" signextend_data [31:0] $end
$var wire 32 Q" link_pc [31:0] $end
$var wire 32 R" data_readdata [31:0] $end
$var reg 32 S" reg_write_data [31:0] $end
$upscope $end
$scope module pc_1 $end
$var wire 1 * clk $end
$var wire 1 g clk_enable $end
$var wire 1 P is_branch $end
$var wire 1 , reset $end
$var wire 32 T" new_pc [31:0] $end
$var reg 1 U" branching $end
$var reg 32 V" intermediate_pc [31:0] $end
$var reg 32 W" pc [31:0] $end
$upscope $end
$scope module pcnext_1 $end
$var wire 1 Z is_true $end
$var wire 26 X" j_addr [25:0] $end
$var wire 32 Y" pc [31:0] $end
$var wire 2 Z" pc_sel [1:0] $end
$var wire 32 [" shifted_imm [31:0] $end
$var wire 32 \" reg_data_a [31:0] $end
$var wire 32 ]" pc_increment [31:0] $end
$var wire 32 ^" extended_imm [31:0] $end
$var reg 32 _" pcnext [31:0] $end
$upscope $end
$scope module reg_file_hi_lo_1 $end
$var wire 32 `" HI_input [31:0] $end
$var wire 1 c HI_write_enable $end
$var wire 32 a" LO_input [31:0] $end
$var wire 1 ` LO_write_enable $end
$var wire 1 * clk $end
$var wire 1 g clk_enable $end
$var wire 1 , reset $end
$var reg 32 b" HI_output [31:0] $end
$var reg 32 c" HI_reg [31:0] $end
$var reg 32 d" LO_output [31:0] $end
$var reg 32 e" LO_reg [31:0] $end
$upscope $end
$scope module register_file_1 $end
$var wire 1 * clk $end
$var wire 1 g clk_enable $end
$var wire 5 f" read_reg1 [4:0] $end
$var wire 5 g" read_reg2 [4:0] $end
$var wire 32 h" register_v0 [31:0] $end
$var wire 1 , reset $end
$var wire 32 i" write_data [31:0] $end
$var wire 1 C write_enable $end
$var wire 5 j" write_reg [4:0] $end
$var reg 32 k" read_data_a [31:0] $end
$var reg 32 l" read_data_b [31:0] $end
$var integer 32 m" index [31:0] $end
$upscope $end
$scope module signextend_1 $end
$var wire 16 n" immediate [15:0] $end
$var wire 1 > select $end
$var wire 1 o" half_msb $end
$var wire 32 p" extended_imm [31:0] $end
$var wire 32 q" data_readdata [31:0] $end
$var wire 1 r" byte_msb $end
$var reg 32 s" extended_data [31:0] $end
$upscope $end
$upscope $end
$scope module memBus $end
$var wire 4 t" byteenable [3:0] $end
$var wire 1 * clk $end
$var wire 32 u" dp_address [31:0] $end
$var wire 32 v" ip_address [31:0] $end
$var wire 1 8 read_dp $end
$var wire 1 3 read_ip $end
$var wire 1 , rst $end
$var wire 1 6 write_dp $end
$var wire 32 w" writedata [31:0] $end
$var wire 32 x" bus_readdata [31:0] $end
$var wire 1 y" bus_busy $end
$var wire 32 z" avl_writedata [31:0] $end
$var wire 1 " avl_write $end
$var wire 1 # avl_waitrequest $end
$var wire 32 {" avl_readdata [31:0] $end
$var wire 1 & avl_read $end
$var wire 4 |" avl_byteenable [3:0] $end
$var wire 32 }" avl_address [31:0] $end
$var reg 32 ~" bus_address [31:0] $end
$var reg 4 !# bus_byteenable [3:0] $end
$var reg 1 "# bus_read $end
$var reg 1 ## bus_write $end
$var reg 32 $# bus_writedata [31:0] $end
$var reg 32 %# dp_data [31:0] $end
$var reg 32 &# ip_data [31:0] $end
$var reg 1 / stall $end
$var reg 3 '# state [2:0] $end
$scope module bus_con $end
$var wire 32 (# address [31:0] $end
$var wire 4 )# byteenable [3:0] $end
$var wire 1 * clk $end
$var wire 1 "# read_select $end
$var wire 1 , rst $end
$var wire 32 *# write_data [31:0] $end
$var wire 1 ## write_select $end
$var wire 1 # avl_waitrequest $end
$var wire 32 +# avl_readdata [31:0] $end
$var reg 32 ,# avl_address [31:0] $end
$var reg 4 -# avl_byteenable [3:0] $end
$var reg 1 & avl_read $end
$var reg 1 " avl_write $end
$var reg 32 .# avl_writedata [31:0] $end
$var reg 1 y" busy $end
$var reg 32 /# read_data [31:0] $end
$var reg 2 0# state [1:0] $end
$var reg 32 1# tmp_addr [31:0] $end
$var reg 4 2# tmp_ben [3:0] $end
$var reg 1 3# tmp_r $end
$var reg 32 4# tmp_rdata [31:0] $end
$var reg 1 5# tmp_w $end
$var reg 32 6# tmp_wdata [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module avlMem $end
$var wire 32 7# address [31:0] $end
$var wire 4 8# byteenable [3:0] $end
$var wire 1 * clk $end
$var wire 1 & read $end
$var wire 1 , rst $end
$var wire 1 " write $end
$var wire 32 9# writedata [31:0] $end
$var reg 32 :# readdata [31:0] $end
$var reg 2 ;# state [1:0] $end
$var reg 1 # waitrequest $end
$scope begin $unm_blk_9 $end
$var integer 32 <# i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000000000 <#
b0 ;#
b0 :#
b0 9#
b1111 8#
b10111111110000000000000000000000 7#
bx 6#
05#
b0 4#
03#
b1111 2#
b0 1#
b0 0#
b0 /#
b0 .#
b1111 -#
b10111111110000000000000000000000 ,#
b0 +#
b0 *#
b1111 )#
b10111111110000000000000000000000 (#
b0 '#
b0 &#
b0 %#
b0 $#
0##
1"#
b1111 !#
b10111111110000000000000000000000 ~"
b10111111110000000000000000000000 }"
b1111 |"
b0 {"
b0 z"
0y"
b0 x"
bx w"
b10111111110000000000000000000000 v"
bx u"
b1111 t"
b0 s"
0r"
b0 q"
b0 p"
0o"
b0 n"
bx m"
bx l"
bx k"
b0 j"
bx i"
bx h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
b0 b"
bx a"
bx `"
b10111111110000000000000000000100 _"
b0 ^"
b10111111110000000000000000000100 ]"
bx \"
b0 ["
b0 Z"
b10111111110000000000000000000000 Y"
b0 X"
b10111111110000000000000000000000 W"
bx V"
xU"
b10111111110000000000000000000100 T"
bx S"
b0 R"
b10111111110000000000000000000100 Q"
b0 P"
b0 O"
bx N"
0M"
bx L"
bx K"
b0 J"
bx I"
b0 H"
b1 G"
b0 F"
b0 E"
bx D"
b0 C"
bx B"
0A"
bx @"
b0 ?"
b0 >"
b0 ="
b1 <"
b0 ;"
b0 :"
b1111 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b1010 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
bx )"
bx ("
bx '"
bx &"
bx %"
b0 $"
b0 #"
bx ""
bx !"
b1010 ~
bx }
bx |
bx {
b0 z
bx y
b0xxxxxxxxxxxxxxxx x
b0x w
b0x v
bx00 u
bx t
bx s
bx r
bx q
b0 p
bx o
bx n
bx m
bx l
bx k
b10111111110000000000000000000000 j
bx i
bx h
0g
0f
bx e
b0 d
0c
bx b
b0 a
0`
b1010 _
bx ^
0]
bx \
b0 [
0Z
b1111 Y
bx X
b0 W
b10111111110000000000000000000000 V
b0 U
b0 T
b0 S
b0 R
b0 Q
0P
b0 O
bx N
b0 M
b10111111110000000000000000000100 L
b0 K
b0 J
b1 I
bx H
bx G
b0 F
b0 E
bx D
1C
bx B
b0 A
b0 @
b0 ?
x>
b10111111110000000000000000000000 =
b1111 <
0;
bx :
b1111 9
08
b0 7
06
bx 5
b10111111110000000000000000000000 4
13
b0 2
b0 1
bx 0
1/
b0 .
b0 -
0,
1+
0*
0)
b10111111110000000000000000000000 (
b1111 '
1&
b0 %
bx $
1#
0"
b0 !
$end
#10
1y"
b11 ;#
b11 0#
b0 6#
b10111111110000000000000000000000 1#
13#
b11 '#
1*
#20
b1 -
0*
#30
0y"
b100100000100010001000100010001 x"
b100100000100010001000100010001 /#
0#
b1 ;#
b100100000100010001000100010001 %
b100100000100010001000100010001 1
b100100000100010001000100010001 {"
b100100000100010001000100010001 +#
b100100000100010001000100010001 :#
1g
1,
1*
#40
b10 -
0*
#50
b0 e
b0 '"
b0 `"
b0 b
b0 ("
b0 a"
b0 N
b0 D"
b0 N"
b0 :
b0 h
b0 u"
b0 t
b0 s
b0 u
b0 X
b0 y
b0 @"
b0 D
b0 S"
b0 i"
b0 \
b0 )"
b0 L"
b0 {
b0 |
b0 }
b0 n
b0 m
b0 o
b0 !"
b0 ""
b0 w
b0 v
b0 x
b0 5
b0 i
b0 w"
1#
b0 x"
b0 /#
b0 k
b0 l
b0 ^
b0 %"
b0 K"
b0 G
b0 B"
b0 I"
b0 l"
b0 H
b0 &"
b0 \"
b0 k"
1)
b0 ;#
b0 %
b0 1
b0 {"
b0 +#
b0 :#
b0 0#
03#
b0 1#
b0 $
b0 0
b0 B
b0 h"
1f
0;
1/
1"#
b10111111110000000000000000000000 ~"
b10111111110000000000000000000000 (#
b0 '#
b100000 m"
1*
#60
b11 -
0*
#70
1y"
b11 '#
b11 0#
b10111111110000000000000000000000 1#
13#
b11 ;#
0g
1*
0,
#80
b100 -
0*
#90
0y"
b100100000100010001000100010001 x"
b100100000100010001000100010001 /#
0#
b1 ;#
b100100000100010001000100010001 %
b100100000100010001000100010001 1
b100100000100010001000100010001 {"
b100100000100010001000100010001 +#
b100100000100010001000100010001 :#
1*
#100
b101 -
0*
#110
0&
1g
0"#
1;
0/
0#
b1 '#
b100100000100010001000100010001 2
b100100000100010001000100010001 Q
b100100000100010001000100010001 >"
b100100000100010001000100010001 &#
b0 0#
b100100000100010001000100010001 4#
b0 ;#
1*
#120
b110 -
0*
#130
b1000100010001 :
b1000100010001 h
b1000100010001 u"
b1000100010000 u
b1 X
b1 y
b1 @"
b1000100010001 D
b1000100010001 S"
b1000100010001 i"
b1000100010001 \
b1000100010001 )"
b1000100010001 L"
b1000100010001 {
b1000100010001 |
b0 q
b0 r
b1000100010001 n
b1000100010001 m
b1000100010001 o
b1000100010001 !"
b1000100010001 ""
b1 w
b1 v
b1000100010001 x
0g
b1000100010001 ^
b1000100010001 %"
b1000100010001 K"
b100010001000100 ["
1#
1&
b10111111110000000000000000000100 (
b10111111110000000000000000000100 =
b10111111110000000000000000000100 }"
b10111111110000000000000000000100 ,#
b10111111110000000000000000000100 7#
1"#
b10111111110000000000000000000100 ~"
b10111111110000000000000000000100 (#
0;
1/
b10111111110000000000000000001000 L
b10111111110000000000000000001000 Q"
b10111111110000000000000000001000 T"
b10111111110000000000000000001000 _"
b0 I
b0 <"
b0 G"
1]
b10001 E
b10001 H"
b10001 j"
b0 _
b0 ~
b0 /"
b10111111110000000000000000000100 4
b10111111110000000000000000000100 j
b10111111110000000000000000000100 v"
b100010001000100010001 4"
b1000100010001 7"
b10001 8"
b10 3"
b10001 1"
b1001 6"
b100 ?
b100 p
b100 *"
b10001 ."
b10001 -"
b1001 ,"
b10 J
b10 E"
b10001 @
b10001 F"
b10001 g"
b1000100010001 S
b1000100010001 J"
b1000100010001 ^"
b1000100010001 p"
b1000100010001 R
b1000100010001 n"
b100010001000100010001 O
b100010001000100010001 X"
03#
b0 '#
b10111111110000000000000000001000 ]"
b10111111110000000000000000000100 V
b10111111110000000000000000000100 W"
b10111111110000000000000000000100 Y"
b100100000100010001000100010001 W
b100100000100010001000100010001 +"
b100100000100010001000100010001 5"
b100100000100010001000100010001 ?"
1*
#140
b111 -
0*
#150
1y"
b11 '#
b11 0#
b10111111110000000000000000000100 1#
13#
b11 ;#
1*
#160
b1000 -
0*
#170
0y"
b110001100010000000000000001 x"
b110001100010000000000000001 /#
0#
b1 ;#
b110001100010000000000000001 %
b110001100010000000000000001 1
b110001100010000000000000001 {"
b110001100010000000000000001 +#
b110001100010000000000000001 :#
1*
#180
b1001 -
0*
#190
0&
1g
0"#
1;
0/
0#
b1 '#
b110001100010000000000000001 2
b110001100010000000000000001 Q
b110001100010000000000000001 >"
b110001100010000000000000001 &#
b0 0#
b110001100010000000000000001 4#
b0 ;#
1*
#200
b1010 -
0*
#210
b1000100010001 b
b1000100010001 ("
b1000100010001 a"
b1000100010001 s
b1000100010000 {
b1 }
b10111111110000000000000000001000 (
b10111111110000000000000000001000 =
b10111111110000000000000000001000 }"
b10111111110000000000000000001000 ,#
b10111111110000000000000000001000 7#
1Z
b1000100010010 :
b1000100010010 h
b1000100010010 u"
b1000100010001 r
b10 X
b10 y
b10 @"
b0 w
b0 v
b11111 E
b11111 H"
b11111 j"
b0 n
b0 m
b0 o
b1 ""
b1 x
b10111111110000000000000000010000 D
b10111111110000000000000000010000 S"
b10111111110000000000000000010000 i"
b100 ["
b10111111110000000000000000001000 ~"
b10111111110000000000000000001000 (#
b110 [
b110 z
b110 0"
b1000100010010 \
b1000100010010 )"
b1000100010010 L"
b1000100010001 k
b1000100010001 l
b1000100010010 !"
b1000100010001 H
b1000100010001 &"
b1000100010001 \"
b1000100010001 k"
1P
b1 K
b1 ;"
b1 Z"
1C
b11 F
b11 ="
b11 O"
b11 I
b11 <"
b11 G"
b1 ^
b1 %"
b1 K"
b1000100010001 5
b1000100010001 i
b1000100010001 w"
b10111111110000000000000000001000 4
b10111111110000000000000000001000 j
b10111111110000000000000000001000 v"
0g
b10001100010000000000000001 4"
b1 7"
b1 8"
b0 3"
b10001 2"
b1 6"
b0 ?
b0 p
b0 *"
b1 -"
b1 ,"
b0 J
b0 E"
b10001 A
b10001 f"
b1 S
b1 J"
b1 ^"
b1 p"
b1 R
b1 n"
b10001100010000000000000001 O
b10001100010000000000000001 X"
1#
1&
1"#
0;
1/
b10111111110000000000000000010000 L
b10111111110000000000000000010000 Q"
b10111111110000000000000000010000 T"
b10111111110000000000000000010000 _"
b1000100010001 G
b1000100010001 B"
b1000100010001 I"
b1000100010001 l"
03#
b0 '#
b10111111110000000000000000001100 ]"
b10111111110000000000000000001000 V
b10111111110000000000000000001000 W"
b10111111110000000000000000001000 Y"
b110001100010000000000000001 W
b110001100010000000000000001 +"
b110001100010000000000000001 5"
b110001100010000000000000001 ?"
1*
#220
b1011 -
0*
#230
1y"
b11 '#
b11 0#
b10111111110000000000000000001000 1#
13#
b11 ;#
1*
#240
b1100 -
0*
#250
0y"
b100100000000100000000000000001 x"
b100100000000100000000000000001 /#
0#
b1 ;#
b100100000000100000000000000001 %
b100100000000100000000000000001 1
b100100000000100000000000000001 {"
b100100000000100000000000000001 +#
b100100000000100000000000000001 :#
1*
#260
b1101 -
0*
#270
0&
1g
0"#
1;
0/
0#
b1 '#
b100100000000100000000000000001 2
b100100000000100000000000000001 Q
b100100000000100000000000000001 >"
b100100000000100000000000000001 &#
b0 0#
b100100000000100000000000000001 4#
b0 ;#
1*
#280
b1110 -
0*
#290
b0 b
b0 ("
b0 a"
b0 s
b1 {
b1 |
b0 }
b10111111110000000000000000001100 (
b10111111110000000000000000001100 =
b10111111110000000000000000001100 }"
b10111111110000000000000000001100 ,#
b10111111110000000000000000001100 7#
0Z
b1 :
b1 h
b1 u"
b0 5
b0 i
b0 w"
b0 r
b1 n
b1 m
b1 o
b0 u
b1 X
b1 y
b1 @"
b1 w
b1 v
b10 E
b10 H"
b10 j"
b10111111110000000000000000001100 ~"
b10111111110000000000000000001100 (#
b0 [
b0 z
b0 0"
b1 \
b1 )"
b1 L"
b0 G
b0 B"
b0 I"
b0 l"
b0 k
b0 l
b1 !"
b0 H
b0 &"
b0 \"
b0 k"
0P
b0 K
b0 ;"
b0 Z"
b0 F
b0 ="
b0 O"
b0 I
b0 <"
b0 G"
b1 D
b1 S"
b1 i"
b10111111110000000000000000001100 4
b10111111110000000000000000001100 j
b10111111110000000000000000001100 v"
0g
b100000000000000001 4"
b10 1"
b0 2"
b1001 6"
b10 ."
b1001 ,"
b10 @
b10 F"
b10 g"
b0 A
b0 f"
b100000000000000001 O
b100000000000000001 X"
1#
1&
1"#
0;
1/
b10111111110000000000000000010000 L
b10111111110000000000000000010000 Q"
b10111111110000000000000000010000 T"
b10111111110000000000000000010000 _"
03#
b0 '#
1U"
b10111111110000000000000000010000 V"
b10111111110000000000000000010000 ]"
b10111111110000000000000000001100 V
b10111111110000000000000000001100 W"
b10111111110000000000000000001100 Y"
b100100000000100000000000000001 W
b100100000000100000000000000001 +"
b100100000000100000000000000001 5"
b100100000000100000000000000001 ?"
1*
#300
b1111 -
0*
#310
1y"
b11 '#
b11 0#
b10111111110000000000000000001100 1#
13#
b11 ;#
1*
#320
b10000 -
0*
#330
0y"
b100100000100100000000000000000 x"
b100100000100100000000000000000 /#
0#
b1 ;#
b100100000100100000000000000000 %
b100100000100100000000000000000 1
b100100000100100000000000000000 {"
b100100000100100000000000000000 +#
b100100000100100000000000000000 :#
1*
#340
b10001 -
0*
#350
0&
1g
0"#
1;
0/
0#
b1 '#
b100100000100100000000000000000 2
b100100000100100000000000000000 Q
b100100000100100000000000000000 >"
b100100000100100000000000000000 &#
b0 0#
b100100000100100000000000000000 4#
b0 ;#
1*
#360
b10010 -
0*
#370
b0 :
b0 h
b0 u"
b0 X
b0 y
b0 @"
b0 D
b0 S"
b0 i"
b0 \
b0 )"
b0 L"
b0 {
b0 |
b10111111110000000000000000010000 (
b10111111110000000000000000010000 =
b10111111110000000000000000010000 }"
b10111111110000000000000000010000 ,#
b10111111110000000000000000010000 7#
bx q
bx r
b0 n
b0 m
b0 o
b0 !"
b0 ""
b0 w
b0 v
b0 x
b0 ["
b10111111110000000000000000010000 ~"
b10111111110000000000000000010000 (#
b10010 E
b10010 H"
b10010 j"
b0 ^
b0 %"
b0 K"
b0 5
b0 i
b0 w"
b10111111110000000000000000010000 4
b10111111110000000000000000010000 j
b10111111110000000000000000010000 v"
0g
b100100000000000000000 4"
b0 7"
b0 8"
b10010 1"
b10010 ."
b0 -"
b10010 @
b10010 F"
b10010 g"
b0 S
b0 J"
b0 ^"
b0 p"
b0 R
b0 n"
b100100000000000000000 O
b100100000000000000000 X"
1#
1&
1"#
0;
1/
b10111111110000000000000000010100 L
b10111111110000000000000000010100 Q"
b10111111110000000000000000010100 T"
b10111111110000000000000000010100 _"
b0 G
b0 B"
b0 I"
b0 l"
03#
b0 '#
0U"
b10111111110000000000000000010100 ]"
b10111111110000000000000000010000 V
b10111111110000000000000000010000 W"
b10111111110000000000000000010000 Y"
b100100000100100000000000000000 W
b100100000100100000000000000000 +"
b100100000100100000000000000000 5"
b100100000100100000000000000000 ?"
b1 $
b1 0
b1 B
b1 h"
1*
#380
b10011 -
0*
#390
1y"
b11 '#
b11 0#
b10111111110000000000000000010000 1#
13#
b11 ;#
1*
#400
b10100 -
0*
#410
0y"
b110010100010000000000000001 x"
b110010100010000000000000001 /#
0#
b1 ;#
b110010100010000000000000001 %
b110010100010000000000000001 1
b110010100010000000000000001 {"
b110010100010000000000000001 +#
b110010100010000000000000001 :#
1*
#420
b10101 -
0*
#430
0&
1g
0"#
1;
0/
0#
b1 '#
b110010100010000000000000001 2
b110010100010000000000000001 Q
b110010100010000000000000001 >"
b110010100010000000000000001 &#
b0 0#
b110010100010000000000000001 4#
b0 ;#
1*
#440
b10110 -
0*
#450
b1 :
b1 h
b1 u"
b1 X
b1 y
b1 @"
b1 \
b1 )"
b1 L"
b1 {
b1 |
b0 q
b0 r
b1 n
b1 m
b1 o
b1 !"
b1 ""
b1 w
b1 v
b1 x
b10111111110000000000000000011100 D
b10111111110000000000000000011100 S"
b10111111110000000000000000011100 i"
1Z
b1000100010001 5
b1000100010001 i
b1000100010001 w"
0g
b0 N
b0 D"
b0 N"
b100 ["
1#
1&
b10111111110000000000000000010100 (
b10111111110000000000000000010100 =
b10111111110000000000000000010100 }"
b10111111110000000000000000010100 ,#
b10111111110000000000000000010100 7#
1"#
b10111111110000000000000000010100 ~"
b10111111110000000000000000010100 (#
0;
1/
b10111111110000000000000000011100 L
b10111111110000000000000000011100 Q"
b10111111110000000000000000011100 T"
b10111111110000000000000000011100 _"
1P
b1 K
b1 ;"
b1 Z"
1C
b11 F
b11 ="
b11 O"
b11 I
b11 <"
b11 G"
b11111 E
b11111 H"
b11111 j"
b1 ^
b1 %"
b1 K"
b110 [
b110 z
b110 0"
b1000100010001 G
b1000100010001 B"
b1000100010001 I"
b1000100010001 l"
b10111111110000000000000000010100 4
b10111111110000000000000000010100 j
b10111111110000000000000000010100 v"
b10010100010000000000000001 4"
b1 7"
b1 8"
b10001 1"
b10010 2"
b1 6"
b10001 ."
b1 -"
b1 ,"
b10001 @
b10001 F"
b10001 g"
b10010 A
b10010 f"
b1 S
b1 J"
b1 ^"
b1 p"
b1 R
b1 n"
b10010100010000000000000001 O
b10010100010000000000000001 X"
03#
b0 '#
b10111111110000000000000000011000 ]"
b10111111110000000000000000010100 V
b10111111110000000000000000010100 W"
b10111111110000000000000000010100 Y"
b110010100010000000000000001 W
b110010100010000000000000001 +"
b110010100010000000000000001 5"
b110010100010000000000000001 ?"
1*
#460
b10111 -
0*
#470
1y"
b11 '#
b11 0#
b10111111110000000000000000010100 1#
13#
b11 ;#
1*
#480
b11000 -
0*
#490
0y"
b10001100100001000000100101 x"
b10001100100001000000100101 /#
0#
b1 ;#
b10001100100001000000100101 %
b10001100100001000000100101 1
b10001100100001000000100101 {"
b10001100100001000000100101 +#
b10001100100001000000100101 :#
1*
#500
b11001 -
0*
#510
0&
1g
0"#
1;
0/
0#
b1 '#
b10001100100001000000100101 2
b10001100100001000000100101 Q
b10001100100001000000100101 >"
b10001100100001000000100101 &#
b0 0#
b10001100100001000000100101 4#
b0 ;#
1*
#520
b11010 -
0*
#530
b1000100010001 {
b1000100010001 |
b0 }
b10111111110000000000000000011000 (
b10111111110000000000000000011000 =
b10111111110000000000000000011000 }"
b10111111110000000000000000011000 ,#
b10111111110000000000000000011000 7#
0Z
b1000100010001 :
b1000100010001 h
b1000100010001 u"
b0 5
b0 i
b0 w"
bx q
bx r
b1000100010000 u
b1 X
b1 y
b1 @"
b0 w
b0 v
b10 E
b10 H"
b10 j"
b0 n
b0 m
b0 o
b0 ""
b0 x
b100000010010100 ["
b10111111110000000000000000011000 ~"
b10111111110000000000000000011000 (#
b100 _
b100 ~
b100 /"
b0 [
b0 z
b0 0"
b1000100010001 \
b1000100010001 )"
b1000100010001 L"
b0 G
b0 B"
b0 I"
b0 l"
b0 k
b0 l
b1000100010001 !"
b1000100010001 H
b1000100010001 &"
b1000100010001 \"
b1000100010001 k"
0P
b0 K
b0 ;"
b0 Z"
b0 F
b0 ="
b0 O"
b1 I
b1 <"
b1 G"
0]
b0 ^
b0 %"
b0 K"
b1000100010001 D
b1000100010001 S"
b1000100010001 i"
b10111111110000000000000000011000 4
b10111111110000000000000000011000 j
b10111111110000000000000000011000 v"
0g
b10001100100001000000100101 4"
b1000000100101 7"
b100101 8"
b10 3"
b10010 1"
b10001 2"
b0 6"
b10010 ."
b100101 -"
b0 ,"
b10 J
b10 E"
b10010 @
b10010 F"
b10010 g"
b10001 A
b10001 f"
b1000000100101 S
b1000000100101 J"
b1000000100101 ^"
b1000000100101 p"
b1000000100101 R
b1000000100101 n"
b10001100100001000000100101 O
b10001100100001000000100101 X"
1#
1&
1"#
0;
1/
b10111111110000000000000000011100 L
b10111111110000000000000000011100 Q"
b10111111110000000000000000011100 T"
b10111111110000000000000000011100 _"
03#
b0 '#
1U"
b10111111110000000000000000011100 V"
b10111111110000000000000000011100 ]"
b10111111110000000000000000011000 V
b10111111110000000000000000011000 W"
b10111111110000000000000000011000 Y"
b10001100100001000000100101 W
b10001100100001000000100101 +"
b10001100100001000000100101 5"
b10001100100001000000100101 ?"
1*
#540
b11011 -
0*
#550
1y"
b11 '#
b11 0#
b10111111110000000000000000011000 1#
13#
b11 ;#
1*
#560
b11100 -
0*
#570
0y"
b11111000000001000000100001 x"
b11111000000001000000100001 /#
0#
b1 ;#
b11111000000001000000100001 %
b11111000000001000000100001 1
b11111000000001000000100001 {"
b11111000000001000000100001 +#
b11111000000001000000100001 :#
1*
#580
b11101 -
0*
#590
0&
1g
0"#
1;
0/
0#
b1 '#
b11111000000001000000100001 2
b11111000000001000000100001 Q
b11111000000001000000100001 >"
b11111000000001000000100001 &#
b0 0#
b11111000000001000000100001 4#
b0 ;#
1*
#600
b11110 -
0*
#610
b10111111110000000000000000011100 :
b10111111110000000000000000011100 h
b10111111110000000000000000011100 u"
b10111111110000000000000000011100 D
b10111111110000000000000000011100 S"
b10111111110000000000000000011100 i"
b10111111110000000000000000011100 {
b10111111110000000000000000011100 |
b10111111110000000000000000011100 (
b10111111110000000000000000011100 =
b10111111110000000000000000011100 }"
b10111111110000000000000000011100 ,#
b10111111110000000000000000011100 7#
b10111111110000000000000000011100 \
b10111111110000000000000000011100 )"
b10111111110000000000000000011100 L"
b10111111110000000000000000011100 u
b0 X
b0 y
b0 @"
b1 w
b100000010000100 ["
b10111111110000000000000000011100 ~"
b10111111110000000000000000011100 (#
b0 _
b0 ~
b0 /"
b10111111110000000000000000011100 !"
b10111111110000000000000000011100 H
b10111111110000000000000000011100 &"
b10111111110000000000000000011100 \"
b10111111110000000000000000011100 k"
b10111111110000000000000000011100 4
b10111111110000000000000000011100 j
b10111111110000000000000000011100 v"
0g
b11111000000001000000100001 4"
b1000000100001 7"
b100001 8"
b0 1"
b11111 2"
b0 ."
b100001 -"
b0 @
b0 F"
b0 g"
b11111 A
b11111 f"
b1000000100001 S
b1000000100001 J"
b1000000100001 ^"
b1000000100001 p"
b1000000100001 R
b1000000100001 n"
b11111000000001000000100001 O
b11111000000001000000100001 X"
1#
1&
1"#
0;
1/
b10111111110000000000000000100000 L
b10111111110000000000000000100000 Q"
b10111111110000000000000000100000 T"
b10111111110000000000000000100000 _"
03#
b0 '#
0U"
b10111111110000000000000000100000 ]"
b10111111110000000000000000011100 V
b10111111110000000000000000011100 W"
b10111111110000000000000000011100 Y"
b11111000000001000000100001 W
b11111000000001000000100001 +"
b11111000000001000000100001 5"
b11111000000001000000100001 ?"
b1000100010001 $
b1000100010001 0
b1000100010001 B
b1000100010001 h"
1*
#620
b11111 -
0*
#630
1y"
b11 '#
b11 0#
b10111111110000000000000000011100 1#
13#
b11 ;#
1*
#640
b100000 -
0*
#650
0y"
b1000 x"
b1000 /#
0#
b1 ;#
b1000 %
b1000 1
b1000 {"
b1000 +#
b1000 :#
1*
#660
b100001 -
0*
#670
0&
1g
0"#
1;
0/
0#
b1 '#
b1000 2
b1000 Q
b1000 >"
b1000 &#
b0 0#
b1000 4#
b0 ;#
1*
#680
b100010 -
0*
#690
b0 {
b0 |
b10111111110000000000000000100000 (
b10111111110000000000000000100000 =
b10111111110000000000000000100000 }"
b10111111110000000000000000100000 ,#
b10111111110000000000000000100000 7#
b0 :
b0 h
b0 u"
b0 u
b0 w
b0 D
b0 S"
b0 i"
b100000 ["
b10111111110000000000000000100000 ~"
b10111111110000000000000000100000 (#
b0 \
b0 )"
b0 L"
b0 !"
b0 H
b0 &"
b0 \"
b0 k"
1P
b11 K
b11 ;"
b11 Z"
0C
b0 E
b0 H"
b0 j"
b10111111110000000000000000100000 4
b10111111110000000000000000100000 j
b10111111110000000000000000100000 v"
0g
b1000 4"
b1000 7"
b1000 8"
b0 3"
b0 2"
b1000 -"
b0 J
b0 E"
b0 A
b0 f"
b1000 S
b1000 J"
b1000 ^"
b1000 p"
b1000 R
b1000 n"
b1000 O
b1000 X"
1#
1&
1"#
0;
1/
b0 L
b0 Q"
b0 T"
b0 _"
03#
b0 '#
b10111111110000000000000000100100 ]"
b10111111110000000000000000100000 V
b10111111110000000000000000100000 W"
b10111111110000000000000000100000 Y"
b1000 W
b1000 +"
b1000 5"
b1000 ?"
b10111111110000000000000000011100 $
b10111111110000000000000000011100 0
b10111111110000000000000000011100 B
b10111111110000000000000000011100 h"
1*
#700
b100011 -
0*
#710
1y"
b11 '#
b11 0#
b10111111110000000000000000100000 1#
13#
b11 ;#
1*
#720
b100100 -
0*
#730
0y"
bx x"
bx /#
0#
b1 ;#
bx %
bx 1
bx {"
bx +#
bx :#
1*
#740
b100101 -
0*
#750
0&
1g
0"#
1;
0/
0#
b1 '#
bx 2
bx Q
bx >"
bx &#
b0 0#
bx 4#
b0 ;#
1*
#760
b100110 -
0*
#770
bx e
bx '"
bx `"
bx b
bx ("
bx a"
bx t
bx s
bx {
bx |
bx }
bx ""
b0xxxxxxxxxxxxxxxx x
bx :
bx h
bx u"
bx 5
bx i
bx w"
0g
bx n
bx m
bx o
bx00 u
bx X
bx y
bx @"
b0x w
b0x v
bx00 ["
1#
1&
b10111111110000000000000000100100 (
b10111111110000000000000000100100 =
b10111111110000000000000000100100 }"
b10111111110000000000000000100100 ,#
b10111111110000000000000000100100 7#
1"#
b10111111110000000000000000100100 ~"
b10111111110000000000000000100100 (#
0;
1/
b10111111110000000000000000101000 L
b10111111110000000000000000101000 Q"
b10111111110000000000000000101000 T"
b10111111110000000000000000101000 _"
0P
b0 K
b0 ;"
b0 Z"
1C
b0 I
b0 <"
b0 G"
1]
bx E
bx H"
bx j"
bx ^
bx %"
bx K"
bx D
bx S"
bx i"
bx \
bx )"
bx L"
bx G
bx B"
bx I"
bx l"
bx k
bx l
bx !"
bx H
bx &"
bx \"
bx k"
b10111111110000000000000000100100 4
b10111111110000000000000000100100 j
b10111111110000000000000000100100 v"
bx 4"
bx 7"
bx 8"
bx 3"
bx 1"
bx 2"
bx 6"
bx ?
bx p
bx *"
bx ."
bx -"
bx ,"
bx J
bx E"
bx @
bx F"
bx g"
bx A
bx f"
bx S
bx J"
bx ^"
bx p"
bx R
bx n"
bx O
bx X"
03#
b0 '#
1U"
b0 V"
b10111111110000000000000000101000 ]"
b10111111110000000000000000100100 V
b10111111110000000000000000100100 W"
b10111111110000000000000000100100 Y"
bx W
bx +"
bx 5"
bx ?"
1*
#780
b100111 -
0*
#790
1y"
b11 '#
b11 0#
b10111111110000000000000000100100 1#
13#
b11 ;#
1*
#800
b101000 -
0*
#810
0y"
0#
b1 ;#
1*
#820
b101001 -
0*
#830
0&
1g
0"#
1;
0/
0#
b1 '#
b0 0#
b0 ;#
1*
#840
b101010 -
0*
#850
0g
1#
1&
b0 (
b0 =
b0 }"
b0 ,#
b0 7#
1"#
b0 ~"
b0 (#
0;
1/
b100 L
b100 Q"
b100 T"
b100 _"
b0 4
b0 j
b0 v"
03#
b0 '#
0U"
b100 ]"
b0 V
b0 W"
b0 Y"
1*
#860
b101011 -
0*
#870
0)
1y"
0f
b11 '#
b11 0#
b0 1#
13#
b11 ;#
1*
